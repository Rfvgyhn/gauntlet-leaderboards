@model GauntletLeaderboard.Web.Models.Players.DetailsViewModel
@using GauntletLeaderboard.Core.Extensions;

@{
    ViewBag.Title = Model.Player.Profile.PersonaName;
}

@section scripts {
    <script type="text/javascript" src="@Url.Content("~/Scripts/player.js")"></script>
}

<div class="row steam-profile">
    <div class="col-md-5">
        <a href="@Model.Player.Profile.ProfileUrl">
            <img src="@Model.Player.Profile.AvatarMedium" class="avatar state-@Model.Player.Profile.PersonaState" title="@Model.Player.Profile.PersonaState" />
            <h2>@Model.Player.Profile.PersonaName</h2>
        </a>
    </div>
    <div class="col-md-4">
    @if (Model.Player.Profile.AchievementPercentage != null) {
        <div>
            Achievements: <a href="@Html.Raw(Model.Player.Profile.ProfileUrl)stats/258970/achievements/">@Model.Player.Profile.AchievementPercentage.Value.ToString("0%")</a>
        </div>
        
        <div id="badges">
            <span>Badges:</span>
        @if (Model.Player.Profile.Badges.Any()) {
            <ul>
            @foreach (var badge in Model.Player.Profile.Badges) {
                <li class="steambadge steambadge-@badge.BorderColor@badge.Level" title="Level @badge.Level"><span></span></li>
            }
            </ul>
        } else {
            <text>None</text>
        }
        </div>
    }
    </div>
    <div class="col-md-3">

    </div>
</div>


<div>

</div>

@if (Model.Player.Entries.Any()) {
<table class="table table-striped" id="player-scores">
    <colgroup>
        <col class="rank" />
        <col class="group" />
        <col class="subgroup" />
        <col class="main"/>
        <col class="score" />
        <col class="toons" />
        <col class="difficulty" />
    </colgroup>
    <thead>
        <tr>
            <th>Rank</th>
            <th>Group</th>
            <th>Sub Group</th>
            <th>Map</th>
            <th>Score</th>
            <th>Characters</th>
            <th>Difficulty</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var entry in Model.Player.Entries)
        {
            <tr>
                <td>@entry.Rank</td>
                <td>@entry.Leaderboard.Group.Name</td>
                <td>@entry.Leaderboard.SubGroup.Name</td>
                <td>@entry.Leaderboard.Name</td>
                <td>
                @if (entry.Leaderboard.ScoreType == GauntletLeaderboard.Core.Model.ScoreType.Time) {
                    @entry.Score.ToTimeSpan().ToString("hh\\:mm\\:ss\\.fff")
                } else {
                    @entry.Score
                }
                </td>
                <td>
                @if (@entry.Leaderboard.Name != "Overall") {
                    <ul class="toons">
                    @foreach (var toon in entry.Toons) {
                        <li class="toon toon-@toon.ToString().ToLower()" title="@toon"><span class="sr-only">@toon</span></li>
                    }
                    </ul>
                }
                </td>
                <td>
                @if (@entry.Leaderboard.Name != "Overall") {
                    @entry.Difficulty
                }
                </td>
            </tr>
        }
    </tbody>
</table>
} else {
<p>No Leaderboard Entries</p>   
}
